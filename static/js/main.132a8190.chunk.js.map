{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Form/Form.module.css","components/Form/Form.js","components/FilterSearch/FilterSearch.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","components/App/App.js","hooks/useLS.js","index.js","components/FilterSearch/FilterSearch.module.css"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","nameId","shortid","generate","telId","handleChange","e","currentTarget","value","reset","className","s","border","form","preventDefault","contact","id","label","htmlFor","input","type","pattern","title","onChange","required","button","FilterSearch","filter","Contact","span","propType","PropTypes","string","isRequired","ContactList","contacts","onDeleteContact","map","contactBtn","onClick","Container","children","container","App","key","init_value","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLS","data","setContacts","setFilter","some","element","toLowerCase","alert","target","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132a8190.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Contact_span__2BhGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBtn\":\"ContactList_contactBtn__1GmaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ewu-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Form_border__1yG4c\",\"form\":\"Form_form__hyiHc\",\"label\":\"Form_label__1DmFu\",\"input\":\"Form_input__1RNnn\",\"button\":\"Form_button__WCoWE\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\nimport shortid from 'shortid';\n\nfunction Form({onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = shortid.generate();\n  const telId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n    return (\n      <div className={s.border}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label} htmlFor={name}>\n            Name\n          </label>\n          <input\n            className={s.input}\n            value={name}\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={handleChange}\n            required\n          />\n          <label className={s.label} htmlFor={number}>\n            Number\n          </label>\n          <input\n            className={s.input}\n            value={number}\n            id={telId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            onChange={handleChange}\n            required\n          />\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './FilterSearch.module.css';\n\nfunction FilterSearch({ filter, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilterSearch.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterSearch;\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.span}>{name}:</span>\n      <span className={s.span}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport s from './ContactList.module.css';\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.contactBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { useLS } from '../../hooks/useLS';\nimport Form from '../Form/Form';\nimport FilterSearch from '../FilterSearch/FilterSearch';\nimport ContactList from '../ContactList/ContactList';\nimport Container from '../Container/Container';\nimport data from '../../contacts.json';\n\n\nfunction App() {\n  \n  const [contacts, setContacts] = useLS('contacts', data)\n  const [filter, setFilter] = useState('');\n\n\n  const handlerInputContacts = data => {\n    const searchingName = contacts.some(\n      element => element.name.toLowerCase() === data.name.toLowerCase(),\n    );\n\n    if (searchingName) {\n      return alert(`this contact already exists`);\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const searchingContacts = e => {\n    setFilter(e.target.value );\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId)\n    );\n  };\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={handlerInputContacts} />\n        <h2>Contacts</h2>\n        <FilterSearch filter={filter} onChange={searchingContacts} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const useLS = (key, init_value) => {\r\n    const [state, setState] = useState(() =>\r\n        JSON.parse(localStorage.getItem(key)) ?? init_value,\r\n    );\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState]\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterSearch_filter__3jGGH\",\"label\":\"FilterSearch_label__2Ytno\",\"input\":\"FilterSearch_input__9PdLj\"};"],"sourceRoot":""}